{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cristina/Desktop/BERKELEY/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    <slot></slot>\\n    <div class=\\\"overlay\\\">\\n      <svg id=\\\"svg\\\"></svg>\\n    </div>\\n    \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    :host {\\n      display: inline-block;\\n      font-family: inherit;\\n      cursor: pointer;\\n      padding: 8px 10px;\\n      position: relative;\\n      text-align: center;\\n      -moz-user-select: none;\\n      -ms-user-select: none;\\n      -webkit-user-select: none;\\n      user-select: none;\\n      justify-content: center;\\n      flex-direction: column;\\n      text-align: center;\\n      display: inline-flex;\\n      outline: none;\\n      letter-spacing: 1.25px;\\n      font-size: 14px;\\n      text-transform: uppercase;\\n      opacity: 0;\\n    }\\n\\n    :host(.wired-rendered) {\\n      opacity: 1;\\n    }\\n\\n    :host(:active) path {\\n      transform: scale(0.97) translate(1.5%, 1.5%);\\n    }\\n\\n    :host(.wired-disabled) {\\n      opacity: 0.6 !important;\\n      background: rgba(0, 0, 0, 0.07);\\n      cursor: default;\\n      pointer-events: none;\\n    }\\n\\n    :host(:focus) path {\\n      stroke-width: 1.5;\\n    }\\n\\n    .overlay {\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      right: 0;\\n      bottom: 0;\\n      pointer-events: none;\\n    }\\n\\n    svg {\\n      display: block;\\n    }\\n\\n    path {\\n      stroke: currentColor;\\n      stroke-width: 0.7;\\n      fill: transparent;\\n      transition: transform 0.05s ease;\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { WiredBase, customElement, property, html, css } from 'wired-lib/lib/wired-base';\nimport { rectangle, line } from 'wired-lib';\nlet WiredButton = class WiredButton extends WiredBase {\n  constructor() {\n    super(...arguments);\n    this.elevation = 1;\n    this.disabled = false;\n  }\n\n  static get styles() {\n    return css(_templateObject());\n  }\n\n  render() {\n    return html(_templateObject2());\n  }\n\n  firstUpdated() {\n    this.addEventListener('keydown', event => {\n      if (event.keyCode === 13 || event.keyCode === 32) {\n        event.preventDefault();\n        this.click();\n      }\n    });\n    this.setAttribute('role', 'button');\n    this.setAttribute('aria-label', this.textContent || this.innerText);\n    setTimeout(() => this.requestUpdate());\n  }\n\n  updated(changed) {\n    if (changed.has('disabled')) {\n      this.refreshDisabledState();\n    }\n\n    const svg = this.shadowRoot.getElementById('svg');\n\n    while (svg.hasChildNodes()) {\n      svg.removeChild(svg.lastChild);\n    }\n\n    const s = this.getBoundingClientRect();\n    const elev = Math.min(Math.max(1, this.elevation), 5);\n    const w = s.width + (elev - 1) * 2;\n    const h = s.height + (elev - 1) * 2;\n    svg.setAttribute('width', \"\".concat(w));\n    svg.setAttribute('height', \"\".concat(h));\n    rectangle(svg, 0, 0, s.width, s.height);\n\n    for (let i = 1; i < elev; i++) {\n      line(svg, i * 2, s.height + i * 2, s.width + i * 2, s.height + i * 2).style.opacity = \"\".concat((75 - i * 10) / 100);\n      line(svg, s.width + i * 2, s.height + i * 2, s.width + i * 2, i * 2).style.opacity = \"\".concat((75 - i * 10) / 100);\n      line(svg, i * 2, s.height + i * 2, s.width + i * 2, s.height + i * 2).style.opacity = \"\".concat((75 - i * 10) / 100);\n      line(svg, s.width + i * 2, s.height + i * 2, s.width + i * 2, i * 2).style.opacity = \"\".concat((75 - i * 10) / 100);\n    }\n\n    this.classList.add('wired-rendered');\n  }\n\n  refreshDisabledState() {\n    if (this.disabled) {\n      this.classList.add('wired-disabled');\n    } else {\n      this.classList.remove('wired-disabled');\n    }\n\n    this.tabIndex = this.disabled ? -1 : +(this.getAttribute('tabindex') || 0);\n  }\n\n};\n\n__decorate([property({\n  type: Number\n}), __metadata(\"design:type\", Object)], WiredButton.prototype, \"elevation\", void 0);\n\n__decorate([property({\n  type: Boolean,\n  reflect: true\n}), __metadata(\"design:type\", Object)], WiredButton.prototype, \"disabled\", void 0);\n\nWiredButton = __decorate([customElement('wired-button')], WiredButton);\nexport { WiredButton };","map":null,"metadata":{},"sourceType":"module"}