{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cristina/Desktop/BERKELEY/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n      <wired-item role=\\\"tab\\\" .value=\\\"\", \"\\\" .selected=\\\"\", \"\\\" ?aria-selected=\\\"\", \"\\\"\\n        @click=\\\"\", \"\\\">\", \"</wired-item>\\n      \"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    <div id=\\\"bar\\\">\\n      \", \"\\n    </div>\\n    <div>\\n      <slot id=\\\"slot\\\" @slotchange=\\\"\", \"\\\"></slot>\\n    </div>\\n    \"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    :host {\\n      display: block;\\n    }\\n\\n    .hidden {\\n      display: none !important;\\n    }\\n  \\n    ::slotted(.hidden) {\\n      display: none !important;\\n    }\\n\\n    :host ::slotted(.hidden) {\\n      display: none !important;\\n    }\\n\\n    #bar {\\n      display: -ms-flexbox;\\n      display: -webkit-flex;\\n      display: flex;\\n      -ms-flex-direction: row;\\n      -webkit-flex-direction: row;\\n      flex-direction: row;\\n    }\\n    \"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    <wired-card>\\n      <slot></slot>\\n    </wired-card>\\n    \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    :host {\\n      display: block;\\n    }\\n    wired-card {\\n      display: block;\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { WiredBase, customElement, property, html, css, query } from 'wired-lib/lib/wired-base';\nimport { repeat } from 'lit-html/directives/repeat';\nimport { WiredCard } from 'wired-card';\nimport 'wired-item';\nimport 'wired-card';\nlet WiredTab = class WiredTab extends WiredBase {\n  constructor() {\n    super(...arguments);\n    this.name = '';\n    this.label = '';\n  }\n\n  static get styles() {\n    return css(_templateObject());\n  }\n\n  render() {\n    return html(_templateObject2());\n  }\n\n  relayout() {\n    setTimeout(() => {\n      if (this.card) {\n        this.card.requestUpdate();\n      }\n    });\n  }\n\n};\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", Object)], WiredTab.prototype, \"name\", void 0);\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", Object)], WiredTab.prototype, \"label\", void 0);\n\n__decorate([query('wired-card'), __metadata(\"design:type\", WiredCard)], WiredTab.prototype, \"card\", void 0);\n\nWiredTab = __decorate([customElement('wired-tab')], WiredTab);\nexport { WiredTab };\nlet WizardTabs = class WizardTabs extends WiredBase {\n  constructor() {\n    super(...arguments);\n    this.pages = [];\n    this.pageMap = new Map();\n  }\n\n  static get styles() {\n    return css(_templateObject3());\n  }\n\n  render() {\n    return html(_templateObject4(), repeat(this.pages, p => p.name, p => html(_templateObject5(), p.name, p.name === this.selected, p.name === this.selected, () => this.selected = p.name, p.label || p.name)), this.mapPages);\n  }\n\n  mapPages() {\n    this.pages = [];\n    this.pageMap.clear();\n\n    if (this.slotElement) {\n      const assigned = this.slotElement.assignedNodes();\n\n      if (assigned && assigned.length) {\n        for (let i = 0; i < assigned.length; i++) {\n          const n = assigned[i];\n\n          if (n.nodeType === Node.ELEMENT_NODE && n.tagName.toLowerCase() === 'wired-tab') {\n            const e = n;\n            this.pages.push(e);\n            const name = e.getAttribute('name') || '';\n\n            if (name) {\n              name.trim().split(' ').forEach(nameSegment => {\n                if (nameSegment) {\n                  this.pageMap.set(nameSegment, e);\n                }\n              });\n            }\n          }\n        }\n\n        if (!this.selected) {\n          if (this.pages.length) {\n            this.selected = this.pages[0].name;\n          }\n        }\n\n        this.requestUpdate();\n      }\n    }\n  }\n\n  firstUpdated() {\n    this.mapPages();\n    this.tabIndex = +(this.getAttribute('tabindex') || 0);\n    this.addEventListener('keydown', event => {\n      switch (event.keyCode) {\n        case 37:\n        case 38:\n          event.preventDefault();\n          this.selectPrevious();\n          break;\n\n        case 39:\n        case 40:\n          event.preventDefault();\n          this.selectNext();\n          break;\n      }\n    });\n  }\n\n  updated() {\n    const newPage = this.getElement();\n\n    for (let i = 0; i < this.pages.length; i++) {\n      const p = this.pages[i];\n\n      if (p === newPage) {\n        p.classList.remove('hidden');\n      } else {\n        p.classList.add('hidden');\n      }\n    }\n\n    this.current = newPage || undefined;\n\n    if (this.current) {\n      this.current.relayout();\n    }\n  }\n\n  getElement() {\n    let e = undefined;\n\n    if (this.selected) {\n      e = this.pageMap.get(this.selected);\n    }\n\n    if (!e) {\n      e = this.pages[0];\n    }\n\n    return e || null;\n  }\n\n  selectPrevious() {\n    const list = this.pages;\n\n    if (list.length) {\n      let index = -1;\n\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] === this.current) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index < 0) {\n        index = 0;\n      } else if (index === 0) {\n        index = list.length - 1;\n      } else {\n        index--;\n      }\n\n      this.selected = list[index].name || '';\n    }\n  }\n\n  selectNext() {\n    const list = this.pages;\n\n    if (list.length) {\n      let index = -1;\n\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] === this.current) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index < 0) {\n        index = 0;\n      } else if (index >= list.length - 1) {\n        index = 0;\n      } else {\n        index++;\n      }\n\n      this.selected = list[index].name || '';\n    }\n  }\n\n};\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", String)], WizardTabs.prototype, \"selected\", void 0);\n\n__decorate([query('slot'), __metadata(\"design:type\", HTMLSlotElement)], WizardTabs.prototype, \"slotElement\", void 0);\n\nWizardTabs = __decorate([customElement('wired-tabs')], WizardTabs);\nexport { WizardTabs };","map":null,"metadata":{},"sourceType":"module"}