{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cristina/Desktop/BERKELEY/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    <slot id=\\\"slot\\\" @slotchange=\\\"\", \"\\\"></slot>\\n    \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    :host {\\n      display: inline-block;\\n    }\\n  \\n    :host ::slotted(*) {\\n      padding: var(--wired-radio-group-item-padding, 5px);\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { WiredBase, customElement, property, html, css } from 'wired-lib/lib/wired-base';\nlet WiredRadioGroup = class WiredRadioGroup extends WiredBase {\n  constructor() {\n    super(...arguments);\n    this.radioNodes = [];\n    this.checkListener = this.handleChecked.bind(this);\n  }\n\n  static get styles() {\n    return css(_templateObject());\n  }\n\n  render() {\n    return html(_templateObject2(), this.slotChange);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('change', this.checkListener);\n  }\n\n  disconnectedCallback() {\n    if (super.disconnectedCallback) super.disconnectedCallback();\n    this.removeEventListener('checked', this.checkListener);\n  }\n\n  handleChecked(event) {\n    const checked = event.detail.checked;\n    const item = event.target;\n    const name = item.name || '';\n\n    if (!checked) {\n      item.checked = true;\n    } else {\n      this.selected = checked && name || '';\n      this.fireSelected();\n    }\n  }\n\n  fireSelected() {\n    this.fireEvent('selected', {\n      selected: this.selected\n    });\n  }\n\n  slotChange() {\n    this.requestUpdate();\n  }\n\n  firstUpdated() {\n    this.setAttribute('role', 'radiogroup');\n    this.tabIndex = +(this.getAttribute('tabindex') || 0);\n    this.addEventListener('keydown', event => {\n      switch (event.keyCode) {\n        case 37:\n        case 38:\n          event.preventDefault();\n          this.selectPrevious();\n          break;\n\n        case 39:\n        case 40:\n          event.preventDefault();\n          this.selectNext();\n          break;\n      }\n    });\n  }\n\n  updated() {\n    const slot = this.shadowRoot.getElementById('slot');\n    const nodes = slot.assignedNodes();\n    this.radioNodes = [];\n\n    if (nodes && nodes.length) {\n      for (let i = 0; i < nodes.length; i++) {\n        const element = nodes[i];\n\n        if (element.tagName === 'WIRED-RADIO') {\n          this.radioNodes.push(element);\n          const name = element.name || '';\n\n          if (this.selected && name === this.selected) {\n            element.checked = true;\n          } else {\n            element.checked = false;\n          }\n        }\n      }\n    }\n  }\n\n  selectPrevious() {\n    const list = this.radioNodes;\n\n    if (list.length) {\n      let radio = null;\n      let index = -1;\n\n      if (this.selected) {\n        for (let i = 0; i < list.length; i++) {\n          const n = list[i];\n\n          if (n.name === this.selected) {\n            index = i;\n            break;\n          }\n        }\n\n        if (index < 0) {\n          radio = list[0];\n        } else {\n          index--;\n\n          if (index < 0) {\n            index = list.length - 1;\n          }\n\n          radio = list[index];\n        }\n      } else {\n        radio = list[0];\n      }\n\n      if (radio) {\n        radio.focus();\n        this.selected = radio.name;\n        this.fireSelected();\n      }\n    }\n  }\n\n  selectNext() {\n    const list = this.radioNodes;\n\n    if (list.length) {\n      let radio = null;\n      let index = -1;\n\n      if (this.selected) {\n        for (let i = 0; i < list.length; i++) {\n          const n = list[i];\n\n          if (n.name === this.selected) {\n            index = i;\n            break;\n          }\n        }\n\n        if (index < 0) {\n          radio = list[0];\n        } else {\n          index++;\n\n          if (index >= list.length) {\n            index = 0;\n          }\n\n          radio = list[index];\n        }\n      } else {\n        radio = list[0];\n      }\n\n      if (radio) {\n        radio.focus();\n        this.selected = radio.name;\n        this.fireSelected();\n      }\n    }\n  }\n\n};\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", String)], WiredRadioGroup.prototype, \"selected\", void 0);\n\nWiredRadioGroup = __decorate([customElement('wired-radio-group')], WiredRadioGroup);\nexport { WiredRadioGroup };","map":null,"metadata":{},"sourceType":"module"}