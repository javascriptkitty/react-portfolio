{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cristina/Desktop/BERKELEY/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    <div>\\n      <slot @slotchange=\\\"\", \"\\\"></slot>\\n    </div>\\n    <div class=\\\"overlay\\\">\\n      <svg id=\\\"svg\\\"></svg>\\n    </div>\\n    \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    :host {\\n      display: inline-block;\\n      position: relative;\\n      padding: 10px;\\n      opacity: 0;\\n    }\\n\\n    :host(.wired-rendered) {\\n      opacity: 1;\\n    }\\n  \\n    .overlay {\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      right: 0;\\n      bottom: 0;\\n      pointer-events: none;\\n    }\\n  \\n    svg {\\n      display: block;\\n    }\\n  \\n    path {\\n      stroke: currentColor;\\n      stroke-width: 0.7;\\n      fill: transparent;\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { WiredBase, customElement, property, html, css } from 'wired-lib/lib/wired-base';\nimport { rectangle, line } from 'wired-lib';\nlet WiredCard = class WiredCard extends WiredBase {\n  constructor() {\n    super(...arguments);\n    this.elevation = 1;\n  }\n\n  static get styles() {\n    return css(_templateObject());\n  }\n\n  render() {\n    return html(_templateObject2(), () => this.requestUpdate());\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.resizeHandler) {\n      this.resizeHandler = this.debounce(this.updated.bind(this), 200, false, this);\n      window.addEventListener('resize', this.resizeHandler);\n    }\n\n    setTimeout(() => this.updated());\n  }\n\n  disconnectedCallback() {\n    if (super.disconnectedCallback) super.disconnectedCallback();\n\n    if (this.resizeHandler) {\n      window.removeEventListener('resize', this.resizeHandler);\n      delete this.resizeHandler;\n    }\n  }\n\n  debounce(func, wait, immediate, context) {\n    let timeout = 0;\n    return () => {\n      const args = arguments;\n\n      const later = () => {\n        timeout = 0;\n\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      };\n\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = window.setTimeout(later, wait);\n\n      if (callNow) {\n        func.apply(context, args);\n      }\n    };\n  }\n\n  updated() {\n    const svg = this.shadowRoot.getElementById('svg');\n\n    while (svg.hasChildNodes()) {\n      svg.removeChild(svg.lastChild);\n    }\n\n    const s = this.getBoundingClientRect();\n    const elev = Math.min(Math.max(1, this.elevation), 5);\n    const w = s.width + (elev - 1) * 2;\n    const h = s.height + (elev - 1) * 2;\n    svg.setAttribute('width', \"\".concat(w));\n    svg.setAttribute('height', \"\".concat(h));\n    rectangle(svg, 2, 2, s.width - 4, s.height - 4);\n\n    for (let i = 1; i < elev; i++) {\n      line(svg, i * 2, s.height - 4 + i * 2, s.width - 4 + i * 2, s.height - 4 + i * 2).style.opacity = \"\".concat((85 - i * 10) / 100);\n      line(svg, s.width - 4 + i * 2, s.height - 4 + i * 2, s.width - 4 + i * 2, i * 2).style.opacity = \"\".concat((85 - i * 10) / 100);\n      line(svg, i * 2, s.height - 4 + i * 2, s.width - 4 + i * 2, s.height - 4 + i * 2).style.opacity = \"\".concat((85 - i * 10) / 100);\n      line(svg, s.width - 4 + i * 2, s.height - 4 + i * 2, s.width - 4 + i * 2, i * 2).style.opacity = \"\".concat((85 - i * 10) / 100);\n    }\n\n    this.classList.add('wired-rendered');\n  }\n\n};\n\n__decorate([property({\n  type: Number\n}), __metadata(\"design:type\", Object)], WiredCard.prototype, \"elevation\", void 0);\n\nWiredCard = __decorate([customElement('wired-card')], WiredCard);\nexport { WiredCard };","map":null,"metadata":{},"sourceType":"module"}