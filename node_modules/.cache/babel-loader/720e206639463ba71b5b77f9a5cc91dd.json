{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cristina/Desktop/BERKELEY/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    <input id=\\\"txt\\\" name=\\\"\", \"\\\" type=\\\"\", \"\\\" placeholder=\\\"\", \"\\\" ?disabled=\\\"\", \"\\\"\\n      ?required=\\\"\", \"\\\" autocomplete=\\\"\", \"\\\" ?autofocus=\\\"\", \"\\\" minlength=\\\"\", \"\\\"\\n      maxlength=\\\"\", \"\\\" min=\\\"\", \"\\\" max=\\\"\", \"\\\" step=\\\"\", \"\\\" ?readonly=\\\"\", \"\\\"\\n      size=\\\"\", \"\\\" autocapitalize=\\\"\", \"\\\" autocorrect=\\\"\", \"\\\" @change=\\\"\", \"\\\">\\n    <div class=\\\"overlay\\\">\\n      <svg id=\\\"svg\\\"></svg>\\n    </div>\\n    \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    :host {\\n      display: inline-block;\\n      position: relative;\\n      padding: 5px;\\n      font-family: sans-serif;\\n      width: 150px;\\n      outline: none;\\n      opacity: 0;\\n    }\\n\\n    :host(.wired-rendered) {\\n      opacity: 1;\\n    }\\n  \\n    :host(.wired-disabled) {\\n      opacity: 0.6 !important;\\n      cursor: default;\\n      pointer-events: none;\\n    }\\n  \\n    :host(.wired-disabled) svg {\\n      background: rgba(0, 0, 0, 0.07);\\n    }\\n  \\n    .overlay {\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      right: 0;\\n      bottom: 0;\\n      pointer-events: none;\\n    }\\n  \\n    svg {\\n      display: block;\\n    }\\n  \\n    path {\\n      stroke: currentColor;\\n      stroke-width: 0.7;\\n      fill: transparent;\\n    }\\n  \\n    input {\\n      display: block;\\n      width: 100%;\\n      box-sizing: border-box;\\n      outline: none;\\n      border: none;\\n      font-family: inherit;\\n      font-size: inherit;\\n      font-weight: inherit;\\n      color: inherit;\\n      padding: 6px;\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { WiredBase, customElement, property, html, css } from 'wired-lib/lib/wired-base';\nimport { rectangle } from 'wired-lib';\nlet WiredInput = class WiredInput extends WiredBase {\n  constructor() {\n    super(...arguments);\n    this.placeholder = '';\n    this.type = 'text';\n    this.autocomplete = '';\n    this.autocapitalize = '';\n    this.autocorrect = '';\n    this.disabled = false;\n    this.required = false;\n    this.autofocus = false;\n    this.readonly = false;\n  }\n\n  static get styles() {\n    return css(_templateObject());\n  }\n\n  render() {\n    return html(_templateObject2(), this.name, this.type, this.placeholder, this.disabled, this.required, this.autocomplete, this.autofocus, this.minlength, this.maxlength, this.min, this.max, this.step, this.readonly, this.size, this.autocapitalize, this.autocorrect, this.onChange);\n  }\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: true\n    });\n  }\n\n  get input() {\n    if (this.shadowRoot) {\n      return this.shadowRoot.getElementById('txt');\n    }\n\n    return null;\n  }\n\n  get value() {\n    const input = this.input;\n    return input && input.value || '';\n  }\n\n  set value(v) {\n    if (this.shadowRoot) {\n      const input = this.input;\n\n      if (input) {\n        input.value = v;\n      }\n    } else {\n      this.pendingValue = v;\n    }\n  }\n\n  firstUpdated() {\n    this.value = this.value || this.getAttribute('value') || '';\n  }\n\n  updated(changed) {\n    if (changed.has('disabled')) {\n      this.refreshDisabledState();\n    }\n\n    const svg = this.shadowRoot.getElementById('svg');\n\n    while (svg.hasChildNodes()) {\n      svg.removeChild(svg.lastChild);\n    }\n\n    const s = this.getBoundingClientRect();\n    svg.setAttribute('width', \"\".concat(s.width));\n    svg.setAttribute('height', \"\".concat(s.height));\n    rectangle(svg, 0, 0, s.width, s.height);\n\n    if (typeof this.pendingValue !== 'undefined') {\n      this.input.value = this.pendingValue;\n      delete this.pendingValue;\n    }\n\n    this.classList.add('wired-rendered');\n  }\n\n  refreshDisabledState() {\n    if (this.disabled) {\n      this.classList.add('wired-disabled');\n    } else {\n      this.classList.remove('wired-disabled');\n    }\n  }\n\n  onChange(event) {\n    event.stopPropagation();\n    this.fireEvent(event.type, {\n      sourceEvent: event\n    });\n  }\n\n};\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", Object)], WiredInput.prototype, \"placeholder\", void 0);\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", String)], WiredInput.prototype, \"name\", void 0);\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", String)], WiredInput.prototype, \"min\", void 0);\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", String)], WiredInput.prototype, \"max\", void 0);\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", String)], WiredInput.prototype, \"step\", void 0);\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", Object)], WiredInput.prototype, \"type\", void 0);\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", Object)], WiredInput.prototype, \"autocomplete\", void 0);\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", Object)], WiredInput.prototype, \"autocapitalize\", void 0);\n\n__decorate([property({\n  type: String\n}), __metadata(\"design:type\", Object)], WiredInput.prototype, \"autocorrect\", void 0);\n\n__decorate([property({\n  type: Boolean,\n  reflect: true\n}), __metadata(\"design:type\", Object)], WiredInput.prototype, \"disabled\", void 0);\n\n__decorate([property({\n  type: Boolean\n}), __metadata(\"design:type\", Object)], WiredInput.prototype, \"required\", void 0);\n\n__decorate([property({\n  type: Boolean\n}), __metadata(\"design:type\", Object)], WiredInput.prototype, \"autofocus\", void 0);\n\n__decorate([property({\n  type: Boolean\n}), __metadata(\"design:type\", Object)], WiredInput.prototype, \"readonly\", void 0);\n\n__decorate([property({\n  type: Number\n}), __metadata(\"design:type\", Number)], WiredInput.prototype, \"minlength\", void 0);\n\n__decorate([property({\n  type: Number\n}), __metadata(\"design:type\", Number)], WiredInput.prototype, \"maxlength\", void 0);\n\n__decorate([property({\n  type: Number\n}), __metadata(\"design:type\", Number)], WiredInput.prototype, \"size\", void 0);\n\nWiredInput = __decorate([customElement('wired-input')], WiredInput);\nexport { WiredInput };","map":null,"metadata":{},"sourceType":"module"}