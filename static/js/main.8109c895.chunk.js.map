{"version":3,"sources":["assets/images/catsketch.png","assets/images/catclose.png","components/burger/index.js","components/intro/index.js","components/about/index.js","components/card/index.js","components/portfolio/index.js","components/contacts/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Burger","props","openNav","bind","closeNav","state","isNavOpen","this","setState","className","onClick","src","logoClose","logo","href","React","Component","Intro","About","Container","name","elevation","Card","onHover","onMouseOut","isMouseOver","onMouseOver","data","description","Button","outline","color","link","target","message","img","works","Portfolio","map","work","key","contacts","icon","Contacts","contact","variant","size","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8109c895.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/catsketch.3249b9e2.png\";","module.exports = __webpack_public_path__ + \"static/media/catclose.1ae4f8f5.png\";","import React from \"react\";\nimport logo from \"../../assets/images/catsketch.png\";\nimport logoClose from \"../../assets/images/catclose.png\";\nimport \"./style.css\";\n\nexport default class Burger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.openNav = this.openNav.bind(this);\n    this.closeNav = this.closeNav.bind(this);\n\n    this.state = {\n      isNavOpen: false\n    };\n  }\n  openNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n    });\n  }\n  closeNav() {\n    this.setState({\n      isNavOpen: false\n    });\n  }\n\n  render() {\n    return (\n      <section className=\"xs\">\n        <div\n          className=\"burger animated infinite pulse slow\"\n          onClick={this.openNav}\n        >\n          {\" \"}\n          <img src={!this.state.isNavOpen ? logo : logoClose} />{\" \"}\n        </div>\n        {this.state.isNavOpen ? (\n          <div className=\"hidden\">\n            <ul>\n              <li>\n                <a href=\"#about\" onClick={this.closeNav}>\n                  About\n                </a>\n                <p>&#3859;</p>\n              </li>{\" \"}\n              <li>\n                <a href=\"#portfolio\" onClick={this.closeNav}>\n                  Portfolio\n                </a>\n              </li>{\" \"}\n              <li>\n                <p>&#3859;</p>\n                <a href=\"#contacts\" onClick={this.closeNav}>\n                  Contacts\n                </a>\n              </li>\n            </ul>\n          </div>\n        ) : null}\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport Burger from \"../burger\";\nimport \"./style.css\";\n\nconst Intro = () => {\n  return (\n    <section className=\"intro\">\n      <Burger />\n      <div className=\"menu\">\n        <ul className=\"animated pulse delay-2s\">\n          <li>\n            <a href=\"#about\">About</a>\n          </li>{\" \"}\n          <span> / </span>\n          <li>\n            <a href=\"#portfolio\">Portfolio</a>\n          </li>{\" \"}\n          <span> / </span>\n          <li>\n            <a href=\"#contacts\">Contacts</a>\n          </li>\n        </ul>\n      </div>\n      <div className=\"info\">\n        <h1 className=\"animated fadeIn slow\">Kristina Alekseeva</h1>\n        <h2 className=\"animated fadeIn delay-1s slow\">Junior web developer</h2>\n      </div>\n    </section>\n  );\n};\n\nexport default Intro;\n","import React from \"react\";\nimport \"wired-card\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"./style.css\";\n\nconst About = () => {\n  return (\n    <section className=\"about\">\n      <Container>\n        <a name=\"about\"></a>\n        <h1>About</h1>\n        <div className=\"about-cards\">\n          <wired-card elevation=\"2\">\n            <h3>About me</h3>\n            <p>\n              I graduated from college with a Bachelor of Electrical\n              Engineering, and started my career in that field, but I have since\n              found my true passion in front end web development. Currently I'm\n              a junior developer focused on JQuery and React projects.\n            </p>\n          </wired-card>\n          <wired-card elevation=\"2\">\n            <h3>My Skillset</h3>\n            <p>\n              I possess both strong analytical and design skills. My sharp eye\n              for details and sense of aesthetics enables me to deliver a strong\n              UX on the projects I work on, while my analytical skills allow me\n              to solve complex problems and implement the functional side of\n              modern web applications front ends. I work well under pressure and\n              can produce high-quality work in short periods of time. I have\n              strong interpersonal skills and can work with a wide variety of\n              people.\n            </p>\n          </wired-card>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport \"./style.css\";\n\nexport default class Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onHover = this.onHover.bind(this);\n    this.onMouseOut = this.onMouseOut.bind(this);\n\n    this.state = {\n      isMouseOver: false\n    };\n  }\n  onHover() {\n    this.setState({\n      isMouseOver: true\n    });\n  }\n  onMouseOut() {\n    this.setState({\n      isMouseOver: false\n    });\n  }\n  render() {\n    return (\n      <wired-card\n        elevation=\"2\"\n        onMouseOver={this.onHover}\n        onMouseOut={this.onMouseOut}\n      >\n        {!this.state.isMouseOver ? (\n          <img src={this.props.data.img} />\n        ) : (\n          <div className=\"onHover\">\n            <h5>\n              <strong>{this.props.data.name}</strong>\n            </h5>\n            <p>{this.props.data.description} </p>\n\n            <Button\n              outline\n              color=\"dark\"\n              href={this.props.data.link}\n              target=\"_blank\"\n            >\n              {\" \"}\n              <strong>{this.props.data.message}</strong>{\" \"}\n            </Button>\n          </div>\n        )}\n      </wired-card>\n    );\n  }\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Card from \"../card\";\nimport \"./style.css\";\n\nconst works = [\n  {\n    name: \"Beautify\",\n    img: \"images/gif3.gif\",\n\n    description:\n      \"Beautify is an appointment scheduling app that searches for services by category and allows users to book them. It also allows users to become a provider and add their own services that will be available for booking to other users.\",\n    link: \"https://beautiffy.herokuapp.com/\",\n    message: \"book with Beautify\",\n  },\n  {\n    name: \"PinME\",\n    img: \"images/site.gif\",\n    description:\n      \"PinME is a website that looks up events based on the type of genre the user picks. The website searches within a 100 mile radius of the user and results are limited to 10. The search results will also appear as pins on the Google Map below the results. Four Spotify playlists related to the genre searched will appear above the results.\",\n    link: \"https://javascriptkitty.github.io/the-first-big-project/\",\n    message: \"pin your music events!\",\n  },\n  {\n    name: \"Shocktail\",\n    img: \"images/shocktail.gif\",\n    description:\n      \"Shocktail is a website that queries for coctails by name or by user selected ingredients. It also has a 'shocktail me' button that displays a random coctail. Cocktails that are found are displayed in a 'card' contains an image of the cocktail, a list of its ingrediends and a recipe.\",\n    link: \"https://beautiffy.herokuapp.com/\",\n    message: \"make your cocktail\",\n  },\n  {\n    name: \"CRYSTALL COLLECTOR\",\n    img: \"images/gif2.gif\",\n    description:\n      \"There are 4 crystals displayed on the screen. For each round, the user will receive a new target number, and each crystal will be assigned a new value. The goal for the user is to click on different crystals so that the sum adds up to the target number for that round.\",\n    link: \"https://javascriptkitty.github.io/Crystal_Collector_game/\",\n    message: \"play\",\n  },\n  {\n    name: \"RPG game\",\n    img: \"images/gif1.gif\",\n    description:\n      \" When the game starts, the user chooses one of 4 characters to be his player and it will fight as that character for the rest of the game. The goal is to survive and defeat all of the remaining fighters. User loses the game if the character’s HP falls to zero or below.\",\n    link: \"https://javascriptkitty.github.io/RPG_Game/\",\n    message: \"play\",\n  },\n\n  {\n    name: \"TRIVIA\",\n    img: \"images/gif4.gif\",\n    description:\n      \"This trivia game shows only one question until the player answers it or the time runs out. After the player selects his answer, the game shows if it's correct or not\",\n    link: \"https://javascriptkitty.github.io/TriviaGame/\",\n    message: \"play\",\n  },\n  {\n    name: \"Clicky game\",\n    img: \"images/gif5.gif\",\n    description:\n      \"User is presented with 12 images. In order to achieve the highest possible score, they must click each image only once. If an image is clicked twice, the game resets.\",\n    link: \"https://javascriptkitty.github.io/clicky_game/\",\n    message: \"play\",\n  },\n\n  {\n    name: \"HANGMAN\",\n    img: \"images/gif6.gif\",\n    description:\n      \"A theme of this game is 'rock bands'. Computer randomly chooses one of the bands and users get 12 tries to guess it.\",\n    link: \"https://javascriptkitty.github.io/Word-Guess/\",\n    message: \"play\",\n  },\n];\n\nconst Portfolio = () => {\n  return (\n    <section className=\"portfolio\">\n      <Container>\n        <a name=\"portfolio\"></a>\n        <h1>Portfolio</h1>\n        <div className=\"cards\">\n          {works.map((work) => {\n            return <Card key={work.name} data={work} />;\n          })}\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Button } from \"@material-ui/core\";\nimport \"./style.css\";\n\nconst contacts = [\n  {\n    name: \"LinkedIn\",\n    icon: \"fa fa-fw fa-2x fa-linkedin-square valign-middle\",\n    link: \"https://www.linkedin.com/in/kristina-alekseeva-0285b585/\",\n  },\n  {\n    name: \"Facebook\",\n    icon: \"fa fa-fw fa-2x fa-facebook-square valign-middle\",\n    link: \"https://www.facebook.com/cristina.camomilla\",\n  },\n  {\n    name: \"GitHub\",\n    icon: \"fa fa-fw fa-2x fa-github-square valign-middle\",\n    link: \"https://github.com/javascriptkitty/\",\n  },\n  {\n    name: \"Email\",\n    icon: \"fa fa-fw fa-2x fa-envelope-square valign-middle\",\n    link: \"mailto:cristina.alekseeva@gmail.com\",\n  },\n];\n\nconst Contacts = () => {\n  return (\n    <section className=\"contacts\">\n      <Container>\n        <a name=\"contacts\"></a>\n        <h1>Contact me</h1>\n        <h4>I am available for freelance projects and full-time employment.</h4>\n\n        <div className=\"linkButtons\">\n          {contacts.map((contact) => {\n            return (\n              <Button\n                variant=\"contained\"\n                size=\"medium\"\n                href={contact.link}\n                target=\"_blank\"\n              >\n                {\" \"}\n                <i className={contact.icon}></i>\n                <strong>{contact.name}</strong>\n              </Button>\n            );\n          })}\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default Contacts;\n","import React from \"react\";\nimport Intro from \"./components/intro\";\nimport About from \"./components/about\";\nimport Portfolio from \"./components/portfolio\";\nimport Contacts from \"./components/contacts\";\n//import Burger from \"./components/burger\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Intro />\n      <About />\n      <Portfolio />\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}